"use strict";(self.webpackChunkln_vortex=self.webpackChunkln_vortex||[]).push([[389],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=p(t),d=i,g=f["".concat(c,".").concat(d)]||f[d]||u[d]||a;return t?r.createElement(g,o(o({ref:n},l),{},{components:t})):r.createElement(g,o({ref:n},l))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7786:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const a={title:"Verifying Binaries",id:"verifying-binaries",sidebar_position:3},o=void 0,s={unversionedId:"verifying-binaries",id:"verifying-binaries",title:"Verifying Binaries",description:"Releases are signed",source:"@site/docs/verifying-binaries.md",sourceDirName:".",slug:"/verifying-binaries",permalink:"/docs/verifying-binaries",draft:!1,editUrl:"https://github.com/ln-vortex/ln-vortex/docs/verifying-binaries.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Verifying Binaries",id:"verifying-binaries",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/configuration"},next:{title:"Backends",permalink:"/docs/Backends/"}},c={},p=[],l={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Releases are signed\nwith ",(0,i.kt)("a",{parentName:"p",href:"https://keybase.io/benthecarman/pgp_keys.asc?fingerprint=0ad83877c1f0cd1ee9bd660ad7cc770b81fd22a8"},"benthecarman's signing key"),"\nwith fingerprint ",(0,i.kt)("inlineCode",{parentName:"p"},"0AD83877C1F0CD1EE9BD660AD7CC770B81FD22A8")),(0,i.kt)("p",null,"To do the verification, first hash the executable using ",(0,i.kt)("inlineCode",{parentName:"p"},"sha256sum"),". You should check that the result is listed in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"SHA256SUMS.asc")," file next to its file name. After doing that you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --verify")," to authenticate the\nsignature."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ gpg -d SHA256SUMS.asc > SHA256SUMS.stripped\ngpg: Signature made Wed 14 Sep 2022 10:21:24 AM CDT\ngpg:                using RSA key 0AD83877C1F0CD1EE9BD660AD7CC770B81FD22A8\ngpg: Good signature from "Ben Carman <benthecarman@live.com>"\n\n$ sha256sum -c SHA256SUMS.stripped\nvortexd-linux-1.0.0.zip: OK\nvortexd-macosx-1.0.0.zip: OK\nvortexd-win-1.0.0.zip: OK\n')))}u.isMDXComponent=!0}}]);