"use strict";(self.webpackChunkln_vortex=self.webpackChunkln_vortex||[]).push([[328],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||s[f]||i;return n?o.createElement(m,a(a({ref:t},u),{},{components:n})):o.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const i={title:"Bitcoin Core",id:"bitcoind"},a=void 0,c={unversionedId:"Backends/bitcoind",id:"Backends/bitcoind",title:"Bitcoin Core",description:"Bitcoin Core is supported in Vortex. Bitcoin Core is not a lightning implementation, so you cannot use it for opening",source:"@site/docs/Backends/bitcoind.md",sourceDirName:"Backends",slug:"/Backends/bitcoind",permalink:"/docs/Backends/bitcoind",draft:!1,editUrl:"https://github.com/ln-vortex/ln-vortex/docs/Backends/bitcoind.md",tags:[],version:"current",frontMatter:{title:"Bitcoin Core",id:"bitcoind"},sidebar:"tutorialSidebar",previous:{title:"Backends",permalink:"/docs/Backends/"},next:{title:"Core Lightning",permalink:"/docs/Backends/cln"}},l={},p=[{value:"Supported Features",id:"supported-features",level:2},{value:"Configuration",id:"configuration",level:2}],u={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Bitcoin Core is supported in Vortex. Bitcoin Core is not a lightning implementation, so you cannot use it for opening\nlightning channels. However, you can use it to for taproot collaborative transactions! Vortex supports Bitcoin Core\nversion\nv0.17 and up, however, taproot support is only available in Bitcoin Core version v22.0 and up."),(0,r.kt)("h2",{id:"supported-features"},"Supported Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Taproot \ud83e\udd55")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"First in your ",(0,r.kt)("inlineCode",{parentName:"p"},"vortex.conf")," file you'll need to set the ",(0,r.kt)("inlineCode",{parentName:"p"},"lightningImplementation")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"bitcoind"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'vortex.lightningImplementation = "bitcoind"\n')),(0,r.kt)("p",null,"Then you'll need to configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"bitcoind")," backend. The ",(0,r.kt)("inlineCode",{parentName:"p"},"bitcoind")," backend has the following configuration options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'vortex.bitcoind.datadir = "/home/user/.bitcoin"\nvortex.bitcoind.rpcconnect = "localhost"\nvortex.bitcoind.rpcport = "8332"\nvortex.bitcoind.version = "23"\nvortex.bitcoind.rpcuser = "rpcuser"\nvortex.bitcoind.rpcpassword = "rpcpassword"\n')),(0,r.kt)("p",null,"By default, Vortex will use the default ",(0,r.kt)("inlineCode",{parentName:"p"},"bitcoind")," datadir and read your ",(0,r.kt)("inlineCode",{parentName:"p"},"bitcoin.conf")," file. If you are using other\nconfiguration options, you will need to set these values in your ",(0,r.kt)("inlineCode",{parentName:"p"},"vortex.conf")," file."))}s.isMDXComponent=!0}}]);